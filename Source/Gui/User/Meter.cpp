#include "Meter.h"
#include <Source/Core/Settings.h>
#include <string.h>
#if 0
unsigned char data[] = {
	0x47, 0x42, 0xed, 0x01, 0x32, 0xff, 0xff, 0xff, 0xff, 0x10, 0x17, 0x10, 0x30, 0x41, 0xb4, 0x08, 0x24, 0x73, 0x56, 0x7b, 0xd0, 0x9c, 0xd3, 0xad, 0x76, 0xbd, 0xf8, 0xf7, 0x9e, 0xde, 0xdb, 0xce, 
	0x79, 0xff, 0xdf, 0xe7, 0x3c, 0xf9, 0xf1, 0x01, 0xa1, 0x73, 0x51, 0xa2, 0xe4, 0x1f, 0x82, 0x01, 0x94, 0x7a, 0x15, 0x1d, 0x2e, 0x41, 0xa8, 0x10, 0x1c, 0x75, 0x1a, 0x2b, 0x2e, 0x21, 0x88, 0x20, 
	0x37, 0xa2, 0x51, 0x71, 0xf2, 0xb2, 0xe1, 0x18, 0x81, 0x01, 0x11, 0x93, 0x51, 0x71, 0xa1, 0xc1, 0x71, 0x51, 0x72, 0xf1, 0xb2, 0xe1, 0x14, 0x01, 0xa2, 0x01, 0x1b, 0xe1, 0x02, 0x8f, 0x25, 0x17, 
	0x1d, 0x1c, 0x1f, 0x2b, 0x1e, 0x21, 0xe7, 0x01, 0x11, 0x73, 0x51, 0x81, 0xc2, 0xd1, 0x92, 0x51, 0xd1, 0xc1, 0xf1, 0xb2, 0xe1, 0x11, 0x01, 0xb1, 0x71, 0x51, 0x71, 0x11, 0xe4, 0x1c, 0xd1, 0x01, 
	0xb1, 0x7d, 0x15, 0x37, 0x18, 0x5a, 0x19, 0x1a, 0x29, 0x2a, 0x1d, 0x2c, 0x2b, 0x1e, 0x11, 0xe7, 0x01, 0x73, 0x51, 0xa1, 0xc2, 0xd1, 0xa1, 0x81, 0x51, 0x71, 0xa1, 0xd1, 0xc1, 0xf1, 0xb1, 0xe1, 
	0x11, 0x01, 0x92, 0x51, 0x71, 0xe1, 0xb3, 0xe2, 0x1b, 0xd1, 0x01, 0x98, 0x15, 0x47, 0x25, 0x17, 0x18, 0x69, 0x18, 0x19, 0x18, 0x19, 0x18, 0x29, 0x2a, 0x1c, 0x1f, 0x1b, 0x21, 0xd7, 0x01, 0x73, 
	0x51, 0xd1, 0xc1, 0xd2, 0xa1, 0x91, 0x72, 0x52, 0xa1, 0xd1, 0xc1, 0xf1, 0xe2, 0x13, 0x53, 0xf2, 0xb2, 0xe1, 0x1b, 0xd1, 0x01, 0xa3, 0x52, 0x71, 0x82, 0xa2, 0x91, 0x73, 0x51, 0x7d, 0x18, 0x29, 
	0x1a, 0x1c, 0x1f, 0x1b, 0x1e, 0x11, 0xb7, 0x01, 0xe1, 0x73, 0x52, 0xc2, 0xa3, 0x92, 0x51, 0x71, 0x92, 0xa1, 0xc1, 0xf1, 0xb1, 0xe1, 0x82, 0x51, 0x81, 0xf2, 0xc2, 0xf1, 0xb1, 0xe1, 0x1a, 0xd1, 
	0x01, 0x11, 0xe1, 0x81, 0xa1, 0xd2, 0xa3, 0x92, 0x83, 0x55, 0x73, 0x81, 0x91, 0x81, 0x91, 0x81, 0x91, 0x82, 0x91, 0xa1, 0xd1, 0xc1, 0xf1, 0xb1, 0xe1, 0x1b, 0x70, 0x17, 0x35, 0x1d, 0x1c, 0x2a, 
	0x39, 0x17, 0x25, 0x19, 0x1a, 0x19, 0x1a, 0x1d, 0x1f, 0x1b, 0x1c, 0x35, 0x1c, 0x4d, 0x1f, 0x1b, 0x1e, 0x11, 0xad, 0x10, 0x11, 0x1e, 0x1b, 0x1f, 0x1c, 0x1a, 0x29, 0x38, 0x17, 0x35, 0x47, 0x28, 
	0x19, 0x1a, 0x19, 0x7a, 0x2d, 0x1f, 0x1b, 0x1e, 0x21, 0xa7, 0x01, 0x93, 0x51, 0xd1, 0xc2, 0xa4, 0x92, 0x51, 0x71, 0xa1, 0x92, 0xa1, 0xd1, 0xf1, 0xb1, 0x72, 0x51, 0xd1, 0xc3, 0xa1, 0xd1, 0xc1, 
	0xb1, 0xe1, 0x18, 0x81, 0x01, 0xd1, 0x51, 0x81, 0xe5, 0x12, 0x01, 0xa2, 0x52, 0xe4, 0x1e, 0x20, 0x11, 0x1e, 0x1b, 0x1f, 0x1d, 0x1a, 0x19, 0x38, 0x17, 0x35, 0x18, 0x37, 0x28, 0x19, 0x2a, 0x7d, 
	0x2c, 0x1f, 0x2b, 0x1e, 0x21, 0x97, 0x01, 0xd3, 0x51, 0xa1, 0xd2, 0xa3, 0x91, 0xa1, 0x42, 0x51, 0x92, 0xa1, 0x91, 0xa2, 0xc1, 0xa2, 0x51, 0x71, 0xc2, 0xa1, 0x91, 0xa1, 0xd1, 0xc2, 0xb1, 0x1f, 
	0x70, 0x1c, 0x25, 0x17, 0x5e, 0x21, 0x1d, 0x35, 0x1c, 0x2b, 0x2e, 0x21, 0xd2, 0x01, 0x11, 0xe1, 0xb1, 0xf1, 0xc2, 0xa3, 0x93, 0x51, 0x71, 0x82, 0x72, 0x81, 0x91, 0xa1, 0xd1, 0xc8, 0x1f, 0x3b, 
	0x1e, 0x21, 0x87, 0x01, 0x11, 0xb1, 0x32, 0x51, 0x81, 0xc2, 0xa1, 0x82, 0x91, 0xa1, 0x72, 0x51, 0x71, 0xd1, 0xa1, 0x91, 0xa2, 0xd1, 0xf1, 0x41, 0x51, 0x32, 0xd1, 0xa2, 0x91, 0xa1, 0xd1, 0xf1, 
	0xb1, 0xe1, 0x1d, 0x70, 0x11, 0x1e, 0x14, 0x25, 0x1f, 0x4b, 0x2e, 0x11, 0x13, 0x25, 0x14, 0x1b, 0x2f, 0x2b, 0x1e, 0x11, 0xd2, 0x01, 0x11, 0xe1, 0xb1, 0xf1, 0xc2, 0xd2, 0xa1, 0x72, 0x51, 0x35, 
	0x81, 0x91, 0xa1, 0xc1, 0xf3, 0xb8, 0x1e, 0x31, 0x97, 0x01, 0x11, 0x72, 0x51, 0x61, 0xc1, 0xa4, 0x91, 0xa1, 0x72, 0x51, 0x36, 0xa1, 0xc1, 0x92, 0x51, 0x81, 0xd1, 0xa2, 0x92, 0xa1, 0xc1, 0xf1, 
	0xb2, 0x1e, 0x70, 0x17, 0x25, 0x19, 0x2f, 0x1c, 0x1f, 0x1b, 0x2e, 0x1c, 0x35, 0x19, 0x3c, 0x1f, 0x1b, 0x1e, 0x11, 0xd2, 0x02, 0x11, 0xe1, 0xb1, 0xf3, 0xc1, 0xd1, 0x32, 0x51, 0x91, 0xa3, 0x81, 
	0x91, 0xa1, 0xd1, 0xf1, 0xb1, 0xe3, 0x01, 0x1a, 0x81, 0x01, 0x92, 0x51, 0x41, 0xd2, 0xa3, 0x91, 0xa1, 0x43, 0x51, 0xa1, 0xd1, 0xa2, 0x91, 0xa1, 0xd1, 0xc1, 0x31, 0x51, 0x41, 0xc2, 0xa2, 0x91, 
	0xa1, 0xd1, 0xc1, 0xb1, 0xe1, 0x1e, 0x70, 0x1d, 0x25, 0x16, 0x1f, 0x1c, 0x1d, 0x2c, 0x1f, 0x1b, 0x1e, 0x1b, 0x13, 0x15, 0x1a, 0x1c, 0x3d, 0x1c, 0x1f, 0x1b, 0x1e, 0xe2, 0x01, 0x12, 0xe2, 0xb2, 
	0xf1, 0x72, 0x51, 0x61, 0xa2, 0x91, 0x81, 0x91, 0xa1, 0xd1, 0xf1, 0xb1, 0xe1, 0x1d, 0x81, 0x01, 0xb1, 0x31, 0x51, 0x31, 0x91, 0xd1, 0xa1, 0x91, 0x82, 0x91, 0x41, 0x51, 0x31, 0x51, 0x61, 0xd1, 
	0xa3, 0x91, 0xa1, 0xc1, 0x82, 0x51, 0x91, 0xd1, 0xa2, 0x91, 0xa1, 0xd1, 0xc1, 0xf1, 0xe2, 0x1d, 0x70, 0x1b, 0x23, 0x15, 0x17, 0x14, 0x35, 0x1a, 0x1c, 0x1f, 0x1b, 0x2e, 0x1b, 0x1c, 0x4a, 0x1c, 
	0x1f, 0x1b, 0x1e, 0xe2, 0x03, 0x13, 0xe1, 0xd1, 0x51, 0x31, 0x51, 0xd1, 0xa4, 0x91, 0xa1, 0xc1, 0xf2, 0xe1, 0x1c, 0x81, 0x01, 0xe1, 0x61, 0x51, 0x31, 0x71, 0xd1, 0xa4, 0x91, 0xd3, 0x51, 0x61, 
	0xd1, 0xa3, 0x91, 0xa1, 0xd1, 0xc2, 0x31, 0x61, 0xc2, 0xa2, 0x91, 0xa1, 0xd1, 0xf1, 0xb1, 0xe1, 0x1d, 0x70, 0x11, 0x16, 0x15, 0x13, 0x15, 0x13, 0x15, 0x33, 0x19, 0x1d, 0x1f, 0x3b, 0x1f, 0x1d, 
	0x1a, 0x19, 0x2a, 0x1d, 0x1f, 0x1b, 0x1e, 0x83, 0x03, 0x11, 0xe1, 0x41, 0x31, 0x51, 0x81, 0xd2, 0x91, 0x81, 0x91, 0xa1, 0xc1, 0xf1, 0xb1, 0xe1, 0x19, 0x70, 0x2e, 0x1f, 0x91, 0x01, 0xa1, 0x31, 
	0x51, 0x42, 0xd2, 0x91, 0x81, 0x91, 0xa1, 0xd1, 0x61, 0x31, 0x61, 0xc1, 0xa4, 0x91, 0xa1, 0xd1, 0x81, 0x31, 0x51, 0xa1, 0xd1, 0xa2, 0x91, 0xa1, 0xd1, 0xc1, 0xb1, 0xe1, 0x1b, 0x70, 0x1b, 0x16, 
	0x18, 0x14, 0x15, 0x13, 0x15, 0x23, 0x27, 0x28, 0x19, 0x1d, 0x1c, 0x1f, 0x1b, 0x1f, 0x2c, 0x3a, 0x1d, 0x1c, 0x1f, 0x1b, 0x11, 0xb3, 0x01, 0x91, 0x31, 0x51, 0x31, 0xd1, 0xa1, 0x91, 0x81, 0x91, 
	0xa1, 0xd1, 0xc1, 0xb1, 0xe1, 0x1a, 0x70, 0x19, 0x11, 0x91, 0x01, 0x11, 0x31, 0x51, 0x31, 0x92, 0xa3, 0x91, 0xa1, 0xd1, 0xc1, 0xf2, 0xc1, 0xd1, 0xa1, 0x91, 0x81, 0x91, 0xa2, 0xd1, 0x31, 0x51, 
	0x61, 0xd2, 0xa1, 0x92, 0xa1, 0xc1, 0xf1, 0xb1, 0xe1, 0x1a, 0x70, 0x1b, 0x33, 0x15, 0x23, 0x17, 0x1a, 0x19, 0x48, 0x19, 0x1a, 0x1d, 0x1f, 0x1b, 0x2f, 0x1c, 0x4d, 0x1c, 0x1b, 0x1e, 0x11, 0xa3, 
	0x01, 0x11, 0x31, 0x51, 0x31, 0x81, 0xa1, 0x91, 0x82, 0x91, 0xa1, 0xc1, 0xf1, 0xb2, 0x1d, 0x81, 0x01, 0x82, 0x31, 0x71, 0xd1, 0xa1, 0x91, 0x82, 0x91, 0xd1, 0xc1, 0xb2, 0xf1, 0xc1, 0xa4, 0x91, 
	0xd1, 0xc1, 0x62, 0x31, 0xa1, 0xd1, 0xa2, 0x91, 0xa1, 0xd1, 0xc1, 0xb1, 0xe1, 0x19, 0x10, 0x16, 0x13, 0x1b, 0x51, 0x20, 0x1b, 0x18, 0x23, 0x14, 0x11, 0x2e, 0x31, 0xb2, 0x01, 0xb1, 0x83, 0x31, 
	0xa1, 0x11, 0xe2, 0x11, 0xf1, 0x41, 0x53, 0x31, 0x81, 0xa1, 0x92, 0x81, 0x72, 0x81, 0x91, 0xa1, 0xd1, 0xc1, 0xf1, 0xb2, 0xf1, 0xc1, 0x91, 0x42, 0x31, 0xd2, 0xe4, 0x1e, 0x20, 0x19, 0x23, 0x14, 
	0x1d, 0x1a, 0x19, 0x18, 0x19, 0x1a, 0x1d, 0x1f, 0x1b, 0x1e, 0x11, 0xe3, 0x01, 0x92, 0x31, 0x41, 0xf1, 0x11, 0xe3, 0x1a, 0x10, 0x16, 0x13, 0x1b, 0x51, 0x10, 0x15, 0x17, 0x1f, 0x70, 0x1b, 0x33, 
	0x2a, 0x19, 0x18, 0x29, 0x1d, 0x1c, 0x1f, 0x2b, 0x1f, 0x1c, 0x2a, 0x19, 0x1a, 0x2d, 0x1c, 0x23, 0x16, 0x1c, 0x1a, 0x19, 0x17, 0x23, 0x1c, 0x1f, 0x1b, 0x1e, 0x21, 0x10, 0x19, 0x13, 0x16, 0x21, 
	0x1c, 0x14, 0x23, 0x1c, 0x4e, 0x21, 0x19, 0x53, 0x19, 0x2b, 0x3e, 0x16, 0x13, 0x61, 0xa1, 0x01, 0xa6, 0x33, 0xb3, 0xe1, 0xf2, 0x31, 0x41, 0xa1, 0x93, 0x81, 0x72, 0x81, 0x91, 0xa1, 0x41, 0x31, 
	0xc3, 0xb1, 0x61, 0x31, 0x52, 0x31, 0x63, 0xb2, 0xe1, 0x1d, 0x20, 0x1b, 0x33, 0x18, 0x1a, 0x19, 0x18, 0x29, 0x1a, 0x1c, 0x1f, 0x1e, 0x11, 0xd3, 0x01, 0xc1, 0x44, 0x31, 0x62, 0xb2, 0xe2, 0x12, 
	0x01, 0x91, 0x31, 0x62, 0x11, 0xc1, 0x42, 0x31, 0xc4, 0xe1, 0x11, 0x01, 0x11, 0xe8, 0x10, 0x16, 0x23, 0x16, 0x2a, 0x39, 0x1a, 0x1d, 0x1f, 0x1b, 0x1e, 0x1b, 0x1f, 0x1c, 0x1d, 0x1a, 0x2d, 0x1c, 
	0x1f, 0x16, 0x23, 0x2a, 0x16, 0x43, 0x1a, 0x1f, 0x1b, 0x2e, 0x11, 0x19, 0x23, 0x16, 0x1e, 0x19, 0x33, 0x18, 0x4b, 0x1e, 0x11, 0x16, 0x63, 0x16, 0x1c, 0x1f, 0x2b, 0x16, 0x13, 0x14, 0x5e, 0x31, 
	0x19, 0x23, 0x1d, 0x21, 0x1e, 0x19, 0x73, 0x1c, 0x2f, 0x2b, 0x1e, 0x16, 0x23, 0x29, 0x28, 0x17, 0x28, 0x29, 0x1a, 0x17, 0x23, 0x3f, 0x16, 0x53, 0x14, 0x1c, 0x2f, 0x1b, 0x1e, 0x21, 0xb2, 0x01, 
	0x11, 0x82, 0x31, 0x41, 0xd2, 0x91, 0x81, 0x91, 0xa1, 0xd1, 0xf1, 0xb1, 0xe1, 0x11, 0x01, 0x11, 0xf1, 0x41, 0x31, 0xc1, 0x11, 0x91, 0x31, 0x66, 0x11, 0xd1, 0x31, 0x82, 0x11, 0xe1, 0x81, 0x31, 
	0x43, 0x11, 0xd6, 0x31, 0x63, 0xf1, 0xb1, 0xe2, 0x11, 0x92, 0x31, 0x61, 0xe1, 0x93, 0x31, 0x84, 0xb2, 0xe1, 0x01, 0x31, 0x37, 0x01, 0xb3, 0x31, 0x91, 0xa1, 0x91, 0x82, 0x91, 0xd1, 0xc1, 0xb3, 
	0xe1, 0xb2, 0xf3, 0xc1, 0xf1, 0xb1, 0x41, 0x31, 0x61, 0xa1, 0x44, 0x31, 0x41, 0xd1, 0xc1, 0xf2, 0xb1, 0xc2, 0x31, 0x41, 0xb1, 0x63, 0x31, 0x81, 0xf2, 0xc2, 0xf1, 0xb1, 0x63, 0x31, 0x91, 0xc2, 
	0x31, 0x81, 0xd2, 0xc1, 0xa2, 0x31, 0xa2, 0xb1, 0x61, 0x31, 0x41, 0xe1, 0xb1, 0x43, 0x31, 0xa2, 0xb1, 0x93, 0x31, 0x91, 0xc1, 0x81, 0x31, 0x42, 0xd1, 0xc3, 0xf2, 0x31, 0x41, 0x95, 0x81, 0x92, 
	0xa1, 0x82, 0x31, 0x92, 0xf1, 0x63, 0x31, 0x91, 0x61, 0x31, 0x42, 0xd1, 0xc1, 0xf1, 0xb1, 0xe1, 0x1b, 0x20, 0x1b, 0x33, 0x18, 0x1a, 0x19, 0x18, 0x29, 0x1d, 0x1c, 0x1b, 0x1e, 0x11, 0x20, 0x1c, 
	0x33, 0x1b, 0x1c, 0x23, 0x16, 0x2b, 0x3e, 0x1c, 0x23, 0x16, 0x1e, 0x1d, 0x14, 0x23, 0x14, 0x2b, 0x1d, 0x33, 0x16, 0x1c, 0x23, 0x18, 0x2d, 0x2f, 0x1b, 0x1e, 0x1f, 0x23, 0x14, 0x1b, 0x16, 0x33, 
	0x18, 0x1f, 0x2c, 0x2f, 0x1b, 0x1e, 0x20, 0x1d, 0x17, 0x60, 0x19, 0x23, 0x14, 0x1d, 0x29, 0x18, 0x19, 0x1a, 0x1c, 0x1f, 0x1b, 0x21, 0x2e, 0x1b, 0x3f, 0x2b, 0x19, 0x23, 0x18, 0x63, 0x18, 0x2d, 
	0x1c, 0x1f, 0x1b, 0x14, 0x13, 0x14, 0x1c, 0x14, 0x33, 0x16, 0x1c, 0x2d, 0x16, 0x19, 0x1f, 0x19, 0x23, 0x14, 0x1d, 0x1c, 0x1a, 0x23, 0x29, 0x1a, 0x1d, 0x23, 0x16, 0x1f, 0x1a, 0x14, 0x23, 0x16, 
	0x1d, 0x43, 0x16, 0x2f, 0x1a, 0x23, 0x14, 0x2c, 0x1d, 0x16, 0x23, 0x19, 0x2a, 0x1c, 0x1f, 0x16, 0x23, 0x19, 0x28, 0x17, 0x28, 0x2a, 0x2d, 0x23, 0x16, 0x1c, 0x1f, 0x16, 0x23, 0x14, 0x1d, 0x1c, 
	0x14, 0x13, 0x17, 0x2a, 0x1d, 0x1c, 0x1f, 0x1e, 0x11, 0xb2, 0x01, 0x62, 0x31, 0x41, 0xd1, 0x92, 0x81, 0x91, 0xa1, 0xd1, 0xf1, 0xb2, 0x11, 0x01, 0xb1, 0x42, 0x31, 0xd1, 0xb1, 0x62, 0x31, 0x61, 
	0xb1, 0xf2, 0xb1, 0xe1, 0x62, 0x31, 0xc1, 0x94, 0x31, 0xa1, 0xf1, 0xd1, 0x42, 0x31, 0x81, 0xc1, 0xa2, 0x31, 0xa1, 0x91, 0xa1, 0xd1, 0xf1, 0xb1, 0xe1, 0x41, 0x31, 0x41, 0xc1, 0x43, 0x31, 0x61, 
	0xc2, 0xd1, 0x61, 0x92, 0xf1, 0xb1, 0x11, 0xd1, 0xc6, 0x01, 0xe1, 0x42, 0x31, 0x61, 0xa1, 0x91, 0x81, 0x91, 0xa1, 0xd1, 0xc1, 0xb1, 0xe3, 0x14, 0xe1, 0xb2, 0xe1, 0x25, 0x31, 0x42, 0x31, 0x72, 
	0x91, 0xa1, 0xd1, 0xc1, 0x62, 0x31, 0x91, 0x43, 0x31, 0x42, 0xa1, 0x62, 0x31, 0x61, 0xa2, 0x31, 0x42, 0xc1, 0xd1, 0x62, 0x31, 0x82, 0x91, 0x62, 0x31, 0xa1, 0x93, 0x31, 0x41, 0x84, 0x31, 0x61, 
	0xc1, 0xd1, 0xc1, 0x21, 0x31, 0x41, 0xd1, 0xc1, 0xd1, 0x92, 0x31, 0x71, 0x81, 0x91, 0xa1, 0xd1, 0xc2, 0x31, 0x61, 0xa1, 0x92, 0x82, 0x91, 0xd1, 0xc1, 0xf1, 0x41, 0x31, 0x42, 0xc1, 0x93, 0x31, 
	0xa1, 0xd1, 0x61, 0x31, 0x42, 0x81, 0x91, 0xa1, 0xc1, 0xf1, 0xb1, 0x19, 0x20, 0x11, 0x1b, 0x14, 0x23, 0x18, 0x1a, 0x19, 0x18, 0x29, 0x1d, 0x1c, 0x1b, 0x1e, 0x11, 0x20, 0x14, 0x23, 0x19, 0x1f, 
	0x1d, 0x33, 0x3c, 0x2f, 0x19, 0x23, 0x26, 0x43, 0x18, 0x1c, 0x1d, 0x14, 0x23, 0x16, 0x1c, 0x1d, 0x14, 0x13, 0x16, 0x18, 0x29, 0x1a, 0x1c, 0x1f, 0x19, 0x23, 0x19, 0x14, 0x33, 0x14, 0x2a, 0x16, 
	0x23, 0x16, 0x1c, 0x1f, 0x1b, 0x11, 0x17, 0x15, 0x13, 0x40, 0x11, 0x1c, 0x13, 0x12, 0x13, 0x1a, 0x19, 0x28, 0x19, 0x1a, 0x1c, 0x1f, 0x1e, 0x41, 0x1b, 0x14, 0x19, 0x3e, 0x1a, 0x23, 0x12, 0x13, 
	0x14, 0x18, 0x14, 0x13, 0x14, 0x38, 0x19, 0x2a, 0x14, 0x13, 0x16, 0x14, 0x13, 0x24, 0x23, 0x16, 0x14, 0x23, 0x16, 0x1d, 0x14, 0x13, 0x12, 0x1a, 0x1d, 0x1a, 0x18, 0x23, 0x16, 0x38, 0x23, 0x26, 
	0x12, 0x13, 0x12, 0x13, 0x16, 0x12, 0x14, 0x12, 0x13, 0x14, 0x3a, 0x16, 0x23, 0x19, 0x2d, 0x19, 0x14, 0x23, 0x17, 0x28, 0x19, 0x1d, 0x16, 0x12, 0x13, 0x29, 0x38, 0x19, 0x1d, 0x1c, 0x1b, 0x19, 
	0x12, 0x13, 0x16, 0x1c, 0x1d, 0x14, 0x12, 0x13, 0x16, 0x1a, 0x16, 0x23, 0x17, 0x38, 0x1a, 0x1d, 0x1f, 0x1b, 0x11, 0xa2, 0x01, 0x62, 0x31, 0x41, 0xd1, 0x92, 0x81, 0x91, 0xa1, 0xc1, 0xf1, 0xb3, 
	0x11, 0x91, 0x31, 0x21, 0x62, 0xc1, 0x61, 0x21, 0x31, 0x61, 0xd1, 0xa2, 0xd1, 0xf1, 0x21, 0x31, 0x41, 0x61, 0x21, 0x31, 0x21, 0x31, 0x62, 0xa1, 0x62, 0x31, 0x41, 0xd1, 0xa1, 0x61, 0x31, 0x43, 
	0x81, 0x91, 0xa2, 0xc2, 0x21, 0x61, 0x41, 0x32, 0x42, 0x31, 0x61, 0x42, 0x31, 0x61, 0xa1, 0xd1, 0xc1, 0xf1, 0x11, 0xf1, 0xf6, 0x01, 0x61, 0x21, 0x31, 0x41, 0xa1, 0x91, 0x82, 0x91, 0xd1, 0xc1, 
	0xb1, 0xe1, 0x13, 0x01, 0x61, 0x21, 0xc3, 0xe1, 0x41, 0x22, 0x31, 0x41, 0x91, 0x71, 0x31, 0x24, 0x71, 0x41, 0x91, 0x61, 0x21, 0x32, 0x21, 0x41, 0x91, 0x31, 0x23, 0x31, 0x21, 0x62, 0x81, 0x21, 
	0x31, 0x81, 0xd1, 0xa1, 0x81, 0x21, 0x31, 0x21, 0x72, 0x81, 0x41, 0x21, 0x31, 0x41, 0x21, 0x42, 0x31, 0x41, 0x31, 0x62, 0x31, 0x23, 0x91, 0x81, 0x31, 0x21, 0x62, 0xa1, 0x91, 0x81, 0x31, 0x21, 
	0x43, 0x81, 0x91, 0xd1, 0x41, 0x31, 0x41, 0xd1, 0xa3, 0x92, 0x41, 0xf1, 0xb1, 0x41, 0x31, 0x41, 0xf1, 0xd1, 0x62, 0x31, 0x41, 0xa1, 0x91, 0x81, 0x61, 0x74, 0x81, 0xa1, 0xd1, 0xf1, 0xb1, 0xe9, 
	0x20, 0x11, 0x14, 0x22, 0x19, 0x1a, 0x19, 0x18, 0x29, 0x1d, 0x1c, 0x1b, 0x1e, 0x11, 0x10, 0x1b, 0x22, 0x14, 0x2c, 0x1a, 0x14, 0x13, 0x12, 0x39, 0x1a, 0x1d, 0x16, 0x13, 0x22, 0x13, 0x14, 0x12, 
	0x13, 0x14, 0x38, 0x13, 0x12, 0x13, 0x18, 0x1a, 0x18, 0x13, 0x12, 0x17, 0x18, 0x17, 0x18, 0x19, 0x1a, 0x1c, 0x16, 0x23, 0x12, 0x13, 0x14, 0x19, 0x13, 0x12, 0x33, 0x12, 0x17, 0x29, 0x1d, 0x1c, 
	0x1f, 0x11, 0x1d, 0x12, 0x1e, 0x50, 0x14, 0x22, 0x16, 0x19, 0x28, 0x19, 0x1a, 0x1d, 0x1f, 0x1e, 0x11, 0x30, 0x1c, 0x12, 0x16, 0x1e, 0x2b, 0x1d, 0x32, 0x14, 0x19, 0x18, 0x22, 0x14, 0x37, 0x12, 
	0x14, 0x19, 0x14, 0x22, 0x13, 0x16, 0x19, 0x18, 0x14, 0x32, 0x14, 0x17, 0x28, 0x14, 0x12, 0x14, 0x3a, 0x14, 0x22, 0x14, 0x28, 0x17, 0x12, 0x13, 0x22, 0x16, 0x14, 0x32, 0x24, 0x22, 0x17, 0x38, 
	0x16, 0x12, 0x13, 0x19, 0x1a, 0x29, 0x14, 0x12, 0x13, 0x48, 0x29, 0x22, 0x16, 0x1d, 0x39, 0x16, 0x13, 0x16, 0x1b, 0x19, 0x22, 0x19, 0x1c, 0x1a, 0x14, 0x22, 0x18, 0x29, 0x48, 0x16, 0x17, 0x19, 
	0x1a, 0x1d, 0x1f, 0x1b, 0x11, 0x92, 0x01, 0x91, 0x21, 0x31, 0x21, 0xa1, 0x92, 0x81, 0x91, 0xa1, 0xd1, 0xf1, 0xb2, 0x11, 0x01, 0x61, 0x21, 0x31, 0xa1, 0xd1, 0xa1, 0x61, 0x21, 0x31, 0x64, 0x91, 
	0xa2, 0x21, 0x31, 0x22, 0x61, 0x31, 0x21, 0x72, 0x81, 0x41, 0x21, 0x31, 0x41, 0x91, 0x62, 0x21, 0x73, 0x81, 0x71, 0x61, 0xa1, 0xc1, 0x42, 0x21, 0x31, 0x61, 0x91, 0x81, 0x43, 0x21, 0x41, 0x72, 
	0x81, 0x91, 0xa1, 0xd1, 0xf1, 0x11, 0x31, 0xc4, 0x01, 0x11, 0xb1, 0x21, 0x31, 0x22, 0x92, 0x81, 0x91, 0xd1, 0xc1, 0xb1, 0xe1, 0x12, 0x01, 0xb1, 0x21, 0x41, 0xf2, 0xb1, 0xf1, 0x61, 0x31, 0x21, 
	0x41, 0xa1, 0x81, 0x41, 0x21, 0x33, 0x71, 0x41, 0x32, 0x61, 0x21, 0x31, 0x21, 0x41, 0x92, 0x87, 0x71, 0x81, 0x31, 0x21, 0x63, 0x91, 0x41, 0x21, 0x33, 0x81, 0x43, 0x21, 0x61, 0x72, 0x21, 0x31, 
	0x41, 0x71, 0x21, 0x31, 0x43, 0x71, 0x81, 0x31, 0x21, 0x63, 0x91, 0x62, 0x21, 0x41, 0x92, 0x81, 0x91, 0xa1, 0x61, 0x31, 0x22, 0xa2, 0x91, 0x61, 0x21, 0x42, 0xf2, 0x21, 0x41, 0xc1, 0xa1, 0x61, 
	0x21, 0x31, 0x61, 0x95, 0x81, 0x61, 0x21, 0x41, 0xa1, 0xd1, 0xc1, 0xf1, 0xb2, 0x18, 0x20, 0x32, 0x16, 0x1a, 0x19, 0x18, 0x29, 0x1d, 0x1c, 0x1b, 0x1e, 0x11, 0x20, 0x14, 0x12, 0x14, 0x1c, 0x1d, 
	0x19, 0x13, 0x22, 0x38, 0x29, 0x16, 0x13, 0x22, 0x16, 0x18, 0x22, 0x14, 0x37, 0x14, 0x22, 0x16, 0x14, 0x13, 0x12, 0x17, 0x48, 0x22, 0x1d, 0x16, 0x12, 0x13, 0x12, 0x14, 0x19, 0x28, 0x67, 0x28, 
	0x19, 0x1a, 0x1d, 0x1c, 0x11, 0x10, 0x1d, 0x16, 0x30, 0x11, 0x1c, 0x32, 0x19, 0x28, 0x19, 0x1a, 0x1d, 0x1f, 0x1b, 0x11, 0x20, 0x11, 0x16, 0x12, 0x1d, 0x2f, 0x1c, 0x1d, 0x32, 0x29, 0x18, 0x12, 
	0x13, 0x14, 0x27, 0x14, 0x12, 0x14, 0x19, 0x14, 0x32, 0x38, 0x67, 0x28, 0x14, 0x22, 0x39, 0x18, 0x22, 0x16, 0x29, 0x18, 0x32, 0x16, 0x18, 0x14, 0x22, 0x14, 0x17, 0x14, 0x22, 0x57, 0x22, 0x18, 
	0x29, 0x18, 0x32, 0x16, 0x49, 0x1a, 0x16, 0x22, 0x1d, 0x1a, 0x19, 0x18, 0x22, 0x19, 0x1c, 0x19, 0x22, 0x19, 0x2a, 0x14, 0x22, 0x58, 0x19, 0x18, 0x22, 0x19, 0x1a, 0x1d, 0x1c, 0x1f, 0x2e, 0x11, 
	0xe1, 0x01, 0x11, 0xd3, 0x21, 0xa1, 0x92, 0x81, 0x91, 0xa1, 0xd1, 0xf1, 0xb3, 0x11, 0xc2, 0x21, 0xa1, 0xd1, 0xa1, 0x42, 0x21, 0x44, 0x81, 0x93, 0x21, 0x41, 0x91, 0x62, 0x24, 0x75, 0x21, 0x45, 
	0x82, 0x21, 0x81, 0xd1, 0x43, 0x21, 0x92, 0x85, 0x71, 0x81, 0x72, 0x81, 0x91, 0xa1, 0xd1, 0xc1, 0x01, 0xe1, 0xb1, 0x03, 0x01, 0x11, 0xa3, 0x21, 0x92, 0x81, 0x91, 0xa1, 0xd1, 0xf1, 0xe1, 0x12, 
	0x01, 0x61, 0x21, 0x61, 0xb1, 0xf2, 0xc1, 0x62, 0x21, 0x61, 0xa1, 0x81, 0x62, 0x23, 0x72, 0x22, 0x83, 0x23, 0x82, 0x77, 0x81, 0x41, 0x21, 0x42, 0x91, 0x81, 0x41, 0x21, 0x42, 0x91, 0x81, 0x63, 
	0x22, 0x83, 0x22, 0x71, 0x41, 0x21, 0x43, 0x71, 0x81, 0x62, 0x23, 0x91, 0x43, 0x21, 0x81, 0x91, 0x82, 0x91, 0xd1, 0x41, 0x21, 0x41, 0xd2, 0x91, 0x41, 0x21, 0x61, 0xd1, 0xc1, 0x42, 0x22, 0xa1, 
	0x92, 0x21, 0x43, 0x83, 0x91, 0x41, 0x21, 0x63, 0xd1, 0xc1, 0xf1, 0xb1, 0xe1, 0x1e, 0x10, 0x11, 0x14, 0x22, 0x16, 0x1a, 0x19, 0x18, 0x29, 0x1d, 0x1c, 0x1b, 0x1e, 0x11, 0x20, 0x16, 0x22, 0x1c, 
	0x1a, 0x16, 0x32, 0x14, 0x38, 0x19, 0x16, 0x32, 0x1a, 0x19, 0x14, 0x12, 0x14, 0x47, 0x32, 0x14, 0x17, 0x18, 0x17, 0x38, 0x22, 0x16, 0x1a, 0x19, 0x32, 0x18, 0x19, 0x18, 0x27, 0x78, 0x19, 0x1a, 
	0x1d, 0x1c, 0x1f, 0x10, 0x17, 0x16, 0x40, 0x1e, 0x19, 0x22, 0x14, 0x19, 0x28, 0x19, 0x1a, 0x1c, 0x1b, 0x1e, 0x11, 0x10, 0x1a, 0x12, 0x16, 0x1b, 0x1f, 0x1c, 0x2d, 0x32, 0x1a, 0x19, 0x18, 0x14, 
	0x22, 0x18, 0x16, 0x22, 0x16, 0x19, 0x16, 0x22, 0x14, 0x28, 0x17, 0x48, 0x59, 0x14, 0x22, 0x19, 0x18, 0x14, 0x22, 0x49, 0x14, 0x22, 0x28, 0x14, 0x22, 0x37, 0x13, 0x12, 0x14, 0x37, 0x18, 0x16, 
	0x22, 0x16, 0x19, 0x14, 0x12, 0x16, 0x22, 0x29, 0x18, 0x19, 0x1a, 0x1d, 0x14, 0x22, 0x1a, 0x18, 0x14, 0x12, 0x14, 0x3d, 0x22, 0x16, 0x29, 0x18, 0x22, 0x16, 0x18, 0x19, 0x18, 0x29, 0x14, 0x12, 
	0x16, 0x4d, 0x1c, 0x1f, 0x1b, 0x1e, 0x11, 0xe1, 0x01, 0xf3, 0x22, 0x92, 0x81, 0x91, 0xa1, 0xd1, 0xf1, 0xb2, 0x12, 0x01, 0x62, 0x21, 0xd1, 0x62, 0x21, 0x42, 0x23, 0x81, 0x93, 0x21, 0x81, 0xa1, 
	0x82, 0x21, 0x44, 0x72, 0x21, 0x62, 0x81, 0x71, 0x81, 0x71, 0x62, 0x21, 0x61, 0xa1, 0xd1, 0x62, 0x21, 0x61, 0x96, 0x85, 0x92, 0xa2, 0xc1, 0xf3, 0x01, 0xb3, 0x01, 0xb1, 0xd3, 0x23, 0x81, 0x91, 
	0xd1, 0xc1, 0xb1, 0x11, 0xe1, 0x91, 0x21, 0x42, 0xf1, 0xc2, 0xd1, 0x92, 0x21, 0x61, 0xa1, 0x91, 0x81, 0x45, 0x21, 0x61, 0x81, 0x93, 0x22, 0x83, 0x71, 0x81, 0x91, 0xa2, 0xd1, 0xa2, 0xd1, 0x46, 
	0x21, 0x83, 0x91, 0x62, 0x21, 0x41, 0x91, 0x82, 0x21, 0x43, 0x71, 0x41, 0x21, 0x42, 0x72, 0x81, 0x66, 0x21, 0x82, 0x23, 0x81, 0x91, 0xa1, 0xc1, 0x45, 0x21, 0x41, 0x91, 0xa1, 0xd1, 0x62, 0x23, 
	0x91, 0x82, 0x21, 0x61, 0x92, 0x81, 0x92, 0x21, 0x61, 0xc4, 0xd1, 0xc1, 0xf1, 0xb1, 0xe1, 0x1e, 0x10, 0x16, 0x22, 0x14, 0x1a, 0x19, 0x28, 0x19, 0x1a, 0x1c, 0x1b, 0x1e, 0x11, 0x20, 0x11, 0x16, 
	0x52, 0x16, 0x18, 0x22, 0x16, 0x28, 0x16, 0x22, 0x14, 0x1a, 0x19, 0x16, 0x22, 0x37, 0x18, 0x19, 0x32, 0x16, 0x18, 0x17, 0x16, 0x14, 0x22, 0x16, 0x2a, 0x1d, 0x32, 0x38, 0x27, 0x18, 0x19, 0x2a, 
	0x1d, 0x1a, 0x3d, 0x2c, 0x1b, 0x1e, 0x10, 0x17, 0x18, 0x1e, 0x30, 0x11, 0x1f, 0x32, 0x38, 0x19, 0x1d, 0x1f, 0x1b, 0x10, 0x16, 0x22, 0x2f, 0x1c, 0x3d, 0x16, 0x22, 0x1d, 0x1a, 0x18, 0x19, 0x14, 
	0x42, 0x16, 0x28, 0x16, 0x22, 0x16, 0x28, 0x17, 0x28, 0x19, 0x2d, 0x4c, 0x1f, 0x16, 0x52, 0x18, 0x49, 0x16, 0x22, 0x18, 0x19, 0x16, 0x22, 0x47, 0x14, 0x22, 0x17, 0x28, 0x29, 0x52, 0x29, 0x32, 
	0x16, 0x18, 0x19, 0x1a, 0x1f, 0x16, 0x52, 0x18, 0x19, 0x2a, 0x14, 0x12, 0x14, 0x29, 0x18, 0x19, 0x32, 0x28, 0x16, 0x22, 0x16, 0x2c, 0x2d, 0x1a, 0x1d, 0x1c, 0x1f, 0x1b, 0x1e, 0x11, 0xe1, 0x01, 
	0x42, 0x21, 0x61, 0x92, 0x81, 0x91, 0xa1, 0xd1, 0xf1, 0xb2, 0x12, 0x01, 0xe1, 0x94, 0x21, 0x62, 0x83, 0x21, 0x61, 0x81, 0x42, 0x22, 0xa1, 0x81, 0x62, 0x21, 0x61, 0x72, 0x81, 0x91, 0x67, 0x21, 
	0x41, 0x93, 0xa1, 0x62, 0x21, 0x61, 0x91, 0x81, 0x71, 0x82, 0x91, 0xa6, 0xc2, 0xf1, 0xb2, 0xe1, 0x01, 0xa1, 0x71, 0xf3, 0x01, 0x11, 0xb1, 0x43, 0x22, 0x81, 0xa1, 0xd2, 0xf1, 0x61, 0x21, 0x42, 
	0xb1, 0xc4, 0xd1, 0x61, 0x21, 0x61, 0xd2, 0x92, 0x82, 0x21, 0x41, 0x63, 0x81, 0x42, 0x22, 0x81, 0x72, 0x81, 0x91, 0xa1, 0xc1, 0xf4, 0xb1, 0xf1, 0xc1, 0x62, 0x21, 0x63, 0x83, 0x91, 0x41, 0x21, 
	0x41, 0xa1, 0x91, 0x71, 0x21, 0x41, 0x82, 0x71, 0x81, 0x72, 0x21, 0x41, 0x81, 0x91, 0xa1, 0xd1, 0x62, 0x21, 0x43, 0x81, 0x63, 0x21, 0x61, 0x91, 0xd1, 0xc1, 0xf1, 0x62, 0x21, 0x61, 0x81, 0x91, 
	0x82, 0x91, 0x41, 0x21, 0x61, 0x91, 0x82, 0x91, 0x66, 0x21, 0x62, 0xc2, 0xd1, 0xa2, 0xd1, 0xc1, 0xf1, 0xb1, 0xe1, 0x1d, 0x10, 0x1c, 0x32, 0x1a, 0x19, 0x28, 0x19, 0x1a, 0x1c, 0x1f, 0x1e, 0x11, 
	0x30, 0x11, 0x1b, 0x16, 0x22, 0x16, 0x38, 0x14, 0x32, 0x16, 0x14, 0x12, 0x16, 0x1a, 0x19, 0x18, 0x17, 0x22, 0x16, 0x28, 0x19, 0x2a, 0x16, 0x42, 0x16, 0x18, 0x19, 0x4a, 0x16, 0x22, 0x19, 0x48, 
	0x19, 0x1a, 0x1c, 0x1f, 0x7b, 0x2e, 0x11, 0x10, 0x1b, 0x18, 0x12, 0x30, 0x11, 0x1e, 0x1d, 0x32, 0x14, 0x18, 0x19, 0x1a, 0x16, 0x22, 0x16, 0x1b, 0x1f, 0x1c, 0x2d, 0x1a, 0x2d, 0x1c, 0x16, 0x1c, 
	0x1a, 0x39, 0x3a, 0x19, 0x48, 0x16, 0x12, 0x16, 0x48, 0x19, 0x1a, 0x1d, 0x1f, 0x1b, 0x5e, 0x1b, 0x1c, 0x1d, 0x19, 0x58, 0x19, 0x1a, 0x16, 0x12, 0x39, 0x78, 0x19, 0x16, 0x12, 0x16, 0x29, 0x1a, 
	0x1d, 0x1c, 0x1d, 0x1a, 0x19, 0x48, 0x16, 0x22, 0x18, 0x19, 0x1a, 0x3c, 0x1d, 0x19, 0x48, 0x39, 0x16, 0x1a, 0x49, 0x1a, 0x16, 0x32, 0x16, 0x19, 0x1d, 0x1a, 0x1d, 0x3a, 0x2d, 0x2f, 0x1e, 0x21, 
	0xc1, 0x01, 0x11, 0xa2, 0x21, 0x41, 0xa1, 0x92, 0x81, 0x91, 0xd1, 0xc1, 0xb1, 0xe1, 0x13, 0x01, 0x11, 0xb1, 0xf1, 0xc1, 0xa2, 0x81, 0x72, 0x81, 0x62, 0x21, 0x61, 0x92, 0xa2, 0x91, 0x81, 0x92, 
	0x21, 0x42, 0x81, 0x91, 0xa2, 0xd1, 0xa1, 0x94, 0x82, 0x93, 0xa1, 0x61, 0x21, 0x61, 0x93, 0x81, 0x91, 0xa1, 0xd1, 0xf1, 0xb5, 0xe4, 0x12, 0x01, 0xb1, 0x01, 0x73, 0x01, 0x12, 0xb1, 0x68, 0x12, 
	0x1d, 0x1b, 0x1f, 0x1c, 0x5d, 0x1c, 0x2f, 0x1c, 0x2a, 0x19, 0x4a, 0x19, 0x58, 0x29, 0x48, 0x1a, 0x1d, 0x1f, 0x1b, 0x1e, 0x11, 0x30, 0x1e, 0x1b, 0x1c, 0x1d, 0x1a, 0x48, 0x29, 0x1a, 0x2d, 0x2a, 
	0x29, 0x38, 0x49, 0x2a, 0x39, 0x1a, 0x3d, 0x1a, 0x19, 0x81, 0x81, 0x91, 0xa3, 0xc1, 0xd1, 0xa4, 0x81, 0x95, 0xa2, 0x94, 0xa5, 0x94, 0xa2, 0xd1, 0xc1, 0xf1, 0xb1, 0xe1, 0x1c, 0x10, 0x11, 0x1e, 
	0x1c, 0x22, 0x16, 0x19, 0x28, 0x19, 0x1a, 0x1c, 0x1f, 0x1e, 0x11, 0x30, 0x21, 0x1b, 0x1f, 0x1d, 0x1a, 0x91, 0x87, 0x91, 0x42, 0x21, 0x81, 0x92, 0xa2, 0xd1, 0xa1, 0x94, 0x81, 0x95, 0xa1, 0xd1, 
	0xa2, 0x91, 0x81, 0x91, 0xa1, 0xd1, 0xf1, 0xb1, 0xe1, 0x1a, 0x10, 0x16, 0x14, 0x1d, 0x30, 0x11, 0x1e, 0x1f, 0x1c, 0x19, 0x14, 0x32, 0x26, 0x2f, 0x2c, 0x2d, 0x1a, 0x2d, 0x1c, 0x3f, 0x1c, 0x1d, 
	0x2a, 0x4d, 0x1a, 0x19, 0x28, 0x29, 0x2a, 0x39, 0x1a, 0x1d, 0x1c, 0x1f, 0x1e, 0x21, 0x30, 0x11, 0x1b, 0x1f, 0x1c, 0x1a, 0x19, 0x28, 0x29, 0x1a, 0x1d, 0x2c, 0x1d, 0x1a, 0x49, 0x1a, 0x19, 0x2a, 
	0x2d, 0x4a, 0x2d, 0x1c, 0x1d, 0x1a, 0x29, 0x48, 0x49, 0x2d, 0x2c, 0x1d, 0x1a, 0x19, 0x28, 0x29, 0x1a, 0x3d, 0x3a, 0x4d, 0x29, 0x18, 0x29, 0x3a, 0x2d, 0x1c, 0x1f, 0x1b, 0x1e, 0x21, 0xd1, 0x01, 
	0xe1, 0xb1, 0x91, 0x61, 0xa1, 0x92, 0x81, 0x91, 0xa1, 0xc1, 0xb1, 0xe1, 0x14, 0x01, 0x11, 0xb1, 0xf1, 0xc1, 0xa1, 0x95, 0x82, 0x91, 0x86, 0x92, 0xa1, 0x41, 0x21, 0x82, 0x91, 0xa3, 0xd1, 0xa2, 
	0x91, 0x82, 0x93, 0xa3, 0xd2, 0xa2, 0x92, 0xa1, 0xc1, 0xf1, 0xe2, 0x1a, 0x10, 0x10, 0x16, 0x10, 0x30, 0x11, 0x1e, 0x1b, 0x1c, 0x1d, 0x29, 0x18, 0x29, 0x5d, 0x1a, 0x3d, 0x1c, 0x2f, 0x1b, 0x1f, 
	0x2c, 0x2d, 0x4c, 0x1d, 0x5a, 0x1d, 0x4a, 0x2d, 0x1f, 0x1b, 0x1e, 0x11, 0x40, 0x11, 0x1e, 0x1f, 0x1c, 0x1d, 0x1a, 0x29, 0x2a, 0x1d, 0x1c, 0x1f, 0x2c, 0x1d, 0x3a, 0x1d, 0x1a, 0x2d, 0x2c, 0x1d, 
	0x1c, 0x1d, 0x2a, 0x1d, 0x3c, 0x2d, 0x19, 0x5a, 0x29, 0x2a, 0x2c, 0x1f, 0x1c, 0x1d, 0x2a, 0x19, 0x2a, 0x1d, 0x2c, 0x4d, 0x3c, 0x1d, 0x1a, 0x49, 0x2a, 0x2d, 0x1c, 0x1f, 0x1b, 0x1e, 0x21, 0xe1, 
	0x01, 0x11, 0xe1, 0xf1, 0xc1, 0xd3, 0x91, 0xa1, 0xd1, 0xf1, 0xb1, 0x15, 0x01, 0x11, 0xe1, 0xb1, 0xc1, 0xd7, 0xa5, 0x92, 0xa5, 0xd2, 0x91, 0xa1, 0xd3, 0xc1, 0xd2, 0xa1, 0x93, 0xa1, 0xd4, 0xc2, 
	0xd2, 0xa1, 0xd1, 0xc1, 0xf1, 0xb1, 0xe1, 0x1b, 0x10, 0x1f, 0x10, 0x14, 0x40, 0x1e, 0x1b, 0x1f, 0x1d, 0x1a, 0x19, 0x28, 0x29, 0x3a, 0x1d, 0x1a, 0x2d, 0x1c, 0x1f, 0x4b, 0x2f, 0x2c, 0x4f, 0x1c, 
	0x4d, 0x3c, 0x3d, 0x1c, 0x1f, 0x1b, 0x1e, 0x11, 0x50, 0x11, 0x1e, 0x1b, 0x1f, 0x2c, 0x3d, 0x1c, 0x4f, 0x2c, 0x3d, 0x3c, 0x4f, 0x2c, 0x2d, 0x2c, 0x2f, 0x2c, 0xa1, 0xd1, 0xc3, 0xf1, 0xc4, 0xd1, 
	0xc4, 0xf3, 0xc2, 0xf2, 0xc1, 0xd5, 0xa1, 0xd2, 0xc1, 0xf1, 0xb1, 0xe2, 0x1f, 0x10, 0x11, 0x1e, 0x1b, 0x1c, 0x2a, 0x29, 0x1d, 0x1c, 0x1f, 0x1e, 0x11, 0x50, 0x11, 0x1e, 0x1b, 0x2f, 0x5d, 0x1c, 
	0x2d, 0x4a, 0x2d, 0x3c, 0x2d, 0x1a, 0x19, 0x1a, 0x1d, 0x1c, 0x2f, 0x2c, 0x4d, 0x3c, 0x3f, 0x1c, 0x3d, 0x1c, 0x1f, 0x1b, 0x1e, 0x11, 0xc1, 0x01, 0x51, 0x91, 0xb4, 0x01, 0x11, 0xe1, 0xb1, 0xc1, 
	0xd1, 0xa5, 0x92, 0xa3, 0xd1, 0xc1, 0xf1, 0xb4, 0xe1, 0xb1, 0xf1, 0xb1, 0xf4, 0xb9, 0x1f, 0x1c, 0x2f, 0x2b, 0x21, 0x50, 0x21, 0x1e, 0x1b, 0x2f, 0x2c, 0x2f, 0x2b, 0x1e, 0x1b, 0x2f, 0x1c, 0x5f, 
	0x4b, 0x3f, 0x1c, 0x3f, 0x2b, 0x2f, 0x2c, 0x3f, 0x4c, 0x1f, 0x4b, 0x2f, 0x1c, 0x3f, 0x3b, 0x2f, 0x1b, 0x1f, 0x2b, 0x1f, 0x2c, 0x4d, 0x1c, 0x1f, 0x2b, 0x1e, 0x21, 0x82, 0x01, 0x11, 0xe2, 0xf1, 
	0xd2, 0xa2, 0xd1, 0xf1, 0xb1, 0xe1, 0x15, 0x02, 0x11, 0xe2, 0xb7, 0xf3, 0xc1, 0xd3, 0xc3, 0xf1, 0xc2, 0xd1, 0xa2, 0xd1, 0xc1, 0xf1, 0xb2, 0xf4, 0xc2, 0xf4, 0xb2, 0xf1, 0xc2, 0xf2, 0xb2, 0x1c, 
	0x10, 0x3f, 0x40, 0x11, 0x1e, 0x1b, 0x1f, 0x1c, 0x1d, 0x2a, 0x29, 0x2a, 0x2d, 0x1c, 0x2f, 0x2b, 0x1e, 0x21, 0x3e, 0x1b, 0x6e, 0x7b, 0x1f, 0x3b, 0x2e, 0x11, 0x70, 0x21, 0x2e, 0x5b, 0x4e, 0x6b, 
	0x6e, 0x3b, 0x1f, 0x2b, 0x3e, 0x81, 0xb3, 0xf2, 0xb3, 0xe4, 0xb5, 0xe3, 0xb3, 0xe2, 0xb1, 0xf3, 0xc2, 0xf2, 0xb1, 0xe2, 0x19, 0x20, 0x11, 0x1e, 0x1b, 0x1f, 0x2c, 0x1d, 0x1c, 0x2f, 0x1e, 0x11, 
	0x70, 0x21, 0x2e, 0x81, 0xb5, 0xf4, 0xb1, 0xf2, 0xc2, 0xd1, 0xc1, 0xf1, 0xb2, 0xe7, 0xb4, 0xe5, 0xb2, 0xe1, 0x1d, 0x10, 0x3f, 0x50, 0x11, 0x1e, 0x1b, 0x1f, 0x2c, 0x5d, 0x2c, 0x2f, 0x1b, 0x1e, 
	0x61, 0x2e, 0x61, 0x2e, 0x21, 0x1e, 0x11, 0x6e, 0x21, 0x81, 0x03, 0x14, 0xe4, 0x18, 0x1e, 0x51, 0x7e, 0x11, 0x1e, 0x11, 0x1e, 0x11, 0x1e, 0x11, 0x3e, 0x2b, 0x4e, 0x11, 0x1e, 0x11, 0x1e, 0x61, 
	0x2e, 0x21, 0x1e, 0x11, 0x3e, 0x6b, 0x2e, 0x21, 0xa2, 0x02, 0x11, 0xe1, 0xb2, 0xf1, 0xc2, 0xf2, 0xe1, 0x18, 0x10, 0x41, 0x2e, 0x21, 0x3e, 0x4b, 0x3e, 0x11, 0x1e, 0x1b, 0x2f, 0x1c, 0x2f, 0x1b, 
	0x2e, 0x11, 0x6e, 0x41, 0x7e, 0x21, 0xd1, 0x03, 0xf5, 0x02, 0x12, 0xe1, 0xb1, 0xf4, 0xc3, 0xf1, 0xb2, 0xe2, 0x15, 0x04, 0x18, 0x10, 0x41, 0x1e, 0x41, 0xb2, 0x05, 0x11, 0xe5, 0x12, 0x03, 0x12, 
	0xe4, 0x16, 0x05, 0x11, 0xe3, 0x14, 0x03, 0x12, 0x0a, 0x11, 0x4e, 0x41, 0xd2, 0x01, 0x12, 0xe4, 0xb2, 0xe2, 0x18, 0x20, 0x41, 0x2e, 0x11, 0x1e, 0x41, 0x1e, 0x3b, 0x1f, 0x2b, 0x1e, 0x11, 0xa1, 
	0x04, 0x11, 0xe4, 0x1e, 0x10, 0x3f, 0x60, 0x21, 0x2e, 0x4b, 0x1f, 0x2b, 0x2e, 0x31, 0xad, 0x10, 0x11, 0x83, 0x03, 0x15, 0xe2, 0x1b, 0x30, 0x31, 0x6e, 0x21, 0x94, 0x03, 0xf8, 0x10, 0x31, 0x5e, 
	0x41, 0xe8, 0x20, 0x81, 0x1e, 0x30, 0x31, 0x1e, 0x41, 0xbf, 0x70, 
};

class CBitmap {
	int naccum;

public:
	void Blit( int _x, int _y, ui8* pData )
	{
		naccum = -1;
		_ASSERT( data[0] = 'G' && data[1] == 'B' );
		unsigned char* p = data+2;
		int w = getvlc8(&p);
		int h = getvlc8(&p);
		ui16 arrPal[16];
		for (int i=0; i<16; i++)
		{
			int nHigh = *p++;
			int nLow = *p++;
			arrPal[i] = (nHigh<<8) | nLow;
		}
		int nPixels = w*h;
		int x = 0, y = 0;
		while ( nPixels > 0 )
		{
			int nCount = getvlc4(&p);
			int nColor = getfix4(&p);
			for (int i=0; i<nCount; i++)
			{
				BIOS::LCD::PutPixel(_x+x, _y+y, arrPal[nColor]);
				if ( ++x >= w )
				{
					x = 0;
					y++;
				}
			}
			nPixels -= nCount;
				_ASSERT( nPixels >= 0 );
		}
	}

private:
	int getvlc8( ui8** pcb )
	{
		ui8 b;
		int nBit = 0, i = 0;
		do 
		{
			b = **pcb;
			(*pcb)++;
			i |= (b & 127) << nBit;
			nBit += 7;
		} while (b & 128);
		return i;
	}

	int getfix4( ui8** pcb )
	{
		if ( naccum == -1 )
		{
			naccum = **pcb;
			(*pcb)++;
			return naccum>>4;
		}
		int nX = naccum&0x0f;
		naccum = -1;
		return nX;
	}

	int getvlc4( ui8** pcb )
	{
		ui8 b;
		int nBit = 0, i = 0;
		do 
		{
			b = getfix4(pcb);
			i |= (b & 7) << nBit;
			nBit += 3;
		} while (b & 8);
		return i;
	}
};
#endif

void CWndUserMeter::OnPaint()
{
	char strDisplay[8];
	CSettings::Calibrator::FastCalc fastCalc;
	Settings.CH1Calib.Prepare( &Settings.CH1, fastCalc );

	float fCorrect = Settings.CH1Calib.Correct( fastCalc, m_fAverage );
	float fDisplay = Settings.CH1Calib.Voltage( fastCalc, m_fAverage );
	BIOS::DBG::sprintf( strDisplay, "%f", fDisplay );

	ui16 cOn = RGB565(000000);
	ui16 cOff = RGB565(e0e0e0);
	ui16 cClr = RGB565(ffffff);

	if ( bRefresh )
	{
		BIOS::LCD::Bar( m_rcClient, cClr );
		bRefresh = false;
	}

	BIOS::LCD::Printf( 8, 220, RGB565(808080), RGB565(ffffff), "adc=%3f cal=%3f var=%3f range=%s ",
		m_fAverage, fCorrect, m_fVariance, CSettings::AnalogChannel::ppszTextResolution[Settings.CH1.Resolution]);

	if ( m_fAverage < 16 || m_fAverage > 240 )
		strcpy(strDisplay, " Err");

	const char* pDisplay = strDisplay;
	int i;
	for (i=0; *pDisplay && i < 4; i++, pDisplay++)
	{
		int nDigit = *pDisplay;
		if ( pDisplay[1] == '.' )
		{
			nDigit |= 128;
			pDisplay++;
		}
 		DrawDigit(20+i*90, 40, nDigit, cOn, cOff);
	}
	for ( ; i < 4; i++ )
		DrawDigit(20+i*90, 40, 0, cClr, cClr);
}

void DrawDigitH0(int x, int y, ui16 clr)
{
	if ( clr == RGB565(ff00ff) )
		return;
	BIOS::LCD::Bar( x, y, x+60, y+16, clr ); 
}

void DrawDigitV0(int x, int y, ui16 clr)
{
	if ( clr == RGB565(ff00ff) )
		return;
	BIOS::LCD::Bar( x, y, x+16, y+60, clr ); 
}

void DrawDot0(int x, int y, ui16 clr)
{
	if ( clr == RGB565(ff00ff) )
		return;
	BIOS::LCD::Bar( x, y, x+12, y+12, clr );
}

void CWndUserMeter::DrawDigit(int x, int y, int nDigit, ui16 clrOn, ui16 clrOff)
{
	ui32 decoder[] =
	{0x1111110, 0x0110000, 0x1101101, 0x1111001, 0x0110011, 0x1011011, 0x1011111, 0x1110000, 0x1111111, 0x1111011};
	ui32 dec = 0;
	if ( (nDigit&127) >= '0' && (nDigit&127) <= '9' )
	{
		dec = decoder[nDigit&15];
		if ( nDigit & 128 )
			dec |= 0x10000000;
	} else
	{
		switch (nDigit)
		{
		case ' ': dec = 0; break;
		case '?': dec = 0; break;
		case '-': dec = 0x0000001; break;
		case 'E': dec = 0x1001111; break;
		case 'r': dec = 0x0000101; break;
		}
	}

	#define EN(n) ( dec>>(28-n*4)&1 ) ? RGB565(ff00ff) : clrOff
 	DrawDigitH0( x, y, EN(1) ); // horny
	DrawDigitH0( x, y+62, EN(7) ); // stredny
	DrawDigitH0( x, y+124, EN(4) ); // dolny
	DrawDigitV0( x+53, y+9, EN(2) );
	DrawDigitV0( x+53, y+71, EN(3) );
	DrawDigitV0( x-9, y+9, EN(6) ); 
	DrawDigitV0( x-9, y+71, EN(5) ); 
	DrawDot0(x+70, y+128, EN(0));
	#undef EN
	#define EN(n) ( dec>>(28-n*4)&1 ) ? clrOn : RGB565(ff00ff)
 	DrawDigitH0( x, y, EN(1) ); // horny
	DrawDigitH0( x, y+62, EN(7) ); // stredny
	DrawDigitH0( x, y+124, EN(4) ); // dolny
	DrawDigitV0( x+53, y+9, EN(2) );
	DrawDigitV0( x+53, y+71, EN(3) );
	DrawDigitV0( x-9, y+9, EN(6) ); 
	DrawDigitV0( x-9, y+71, EN(5) ); 
	DrawDot0(x+70, y+128, EN(0));
	#undef EN
}

void CWndUserMeter::OnWave()
{
	if (bTimer)
		return;
/*
#ifdef _WIN32
	m_fAverage = (float)167.27f;
	m_fVariance = 0.312f;	
	KillTimer();
	SetTimer(100);
	bTimer = true;
	return;
#endif
*/
	int nSum = 0;
	int nMax = -1, nMin = -1;
	for (int i=0; i</*BIOS::ADC::Length()*/ (int)BIOS::ADC::GetCount(); i++)
	{
		int nValue = BIOS::ADC::GetAt(i)&0xff;
		if ( nMax == -1 )
			nMax = nMin = nValue;
		else
		{
			nMax = max(nMax, nValue);
			nMin = min(nMin, nValue);
		}
		nSum += nValue;
	}

	m_fAverage = (float)nSum/4096.0f;
	m_fVariance = (nMax-nMin)/4.0f;	// pseudo variance :)
	KillTimer();
	SetTimer(100);
	bTimer = true;
}

/*virtual*/ void CWndUserMeter::OnTimer()
{
	bTimer = false;
	KillTimer();
	Invalidate();
}